#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—Ç–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–≥—Ä–∞—Ö - Human-–±–æ—Ç—ã –∏–ª–∏ –∂–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏
"""
import asyncio
from motor.motor_asyncio import AsyncIOMotorClient
import os
from dotenv import load_dotenv
from pathlib import Path

# Load environment variables
ROOT_DIR = Path(__file__).parent / "backend"
load_dotenv(ROOT_DIR / '.env')

# MongoDB connection
mongo_url = os.environ.get('MONGO_URL', 'mongodb://localhost:27017')
client = AsyncIOMotorClient(mongo_url)
db = client[os.environ.get('DB_NAME', 'gemplay_db')]

async def check_game_participants():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–≥—Ä –∏ –∫–∞–∫–∏–µ —Ç–∏–ø—ã –∫–æ–º–∏—Å—Å–∏–π –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω—ã
    """
    
    try:
        # –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã —Å –∫–æ–º–∏—Å—Å–∏–µ–π
        recent_games = await db.games.find({
            "status": "COMPLETED",
            "commission_amount": {"$gt": 0}
        }).sort("completed_at", -1).limit(10).to_list(10)
        
        print(f"üéÆ –ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö {len(recent_games)} –∏–≥—Ä —Å –∫–æ–º–∏—Å—Å–∏–µ–π:")
        
        for i, game in enumerate(recent_games):
            game_id = game.get("id", "N/A")[:8]
            creator_id = game.get("creator_id", "N/A")
            opponent_id = game.get("opponent_id", "N/A")
            winner_id = game.get("winner_id", "N/A")
            commission = game.get("commission_amount", 0)
            bet_amount = game.get("bet_amount", 0)
            completed = str(game.get("completed_at", "N/A"))[:19]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è—é—Ç—Å—è –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ Human-–±–æ—Ç–∞–º–∏
            creator_is_human_bot = await db.human_bots.find_one({"id": creator_id}) is not None
            opponent_is_human_bot = await db.human_bots.find_one({"id": opponent_id}) is not None if opponent_id else False
            winner_is_human_bot = await db.human_bots.find_one({"id": winner_id}) is not None if winner_id else False
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø –∫–æ–º–∏—Å—Å–∏–∏ –ø–æ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ
            if creator_is_human_bot and opponent_is_human_bot:
                expected_commission_type = "HUMAN_BOT_COMMISSION (Human vs Human)"
            elif winner_is_human_bot:
                expected_commission_type = "HUMAN_BOT_COMMISSION (Human-bot wins)"
            else:
                expected_commission_type = "BET_COMMISSION (Live player wins)"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è –±—ã–ª–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–∞
            actual_commission = await db.profit_entries.find_one({
                "reference_id": game_id,
                "amount": commission
            })
            
            actual_type = actual_commission.get("entry_type", "NOT_FOUND") if actual_commission else "NOT_FOUND"
            
            print(f"\n   {i+1}. Game {game_id}... | ${bet_amount} bet, ${commission:.2f} commission | {completed}")
            print(f"      Creator: {'Human-bot' if creator_is_human_bot else 'Live player'} ({creator_id[:8]}...)")
            print(f"      Opponent: {'Human-bot' if opponent_is_human_bot else 'Live player'} ({opponent_id[:8] if opponent_id else 'N/A'}...)")
            print(f"      Winner: {'Human-bot' if winner_is_human_bot else 'Live player'} ({winner_id[:8] if winner_id else 'N/A'}...)")
            print(f"      –û–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø: {expected_commission_type}")
            print(f"      –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ç–∏–ø: {actual_type}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏
            if expected_commission_type.startswith("HUMAN_BOT_COMMISSION") and actual_type == "HUMAN_BOT_COMMISSION":
                print(f"      ‚úÖ –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
            elif expected_commission_type.startswith("BET_COMMISSION") and actual_type == "BET_COMMISSION":
                print(f"      ‚úÖ –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
            else:
                if "Human vs Human" in expected_commission_type or "Human-bot wins" in expected_commission_type:
                    if actual_type == "BET_COMMISSION":
                        print(f"      ‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ, –∏–≥—Ä–∞ –±—ã–ª–∞ –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏")
                    else:
                        print(f"      ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –∫–æ–º–∏—Å—Å–∏–∏!")
                else:
                    print(f"      ‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –∫–æ–º–∏—Å—Å–∏–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        print(f"\n‚ÑπÔ∏è  –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫ –∏–≥—Ä–∞–º, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞.")
        print(f"   –ò–≥—Ä—ã, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Å—Ç–∞—Ä—ã–µ —Ç–∏–ø—ã –∫–æ–º–∏—Å—Å–∏–π.")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–≥—Ä: {e}")
    finally:
        client.close()

if __name__ == "__main__":
    asyncio.run(check_game_participants())