#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞–≤–æ–∫
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —á–∞—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'backend'))

def test_game_status_enum():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ RESERVED"""
    print("\nüß™ TEST 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ GameStatus enum")
    print("="*50)
    
    try:
        from server import GameStatus
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
        if hasattr(GameStatus, 'RESERVED'):
            print("‚úÖ –°—Ç–∞—Ç—É—Å RESERVED –¥–æ–±–∞–≤–ª–µ–Ω –≤ GameStatus")
            print(f"   –ó–Ω–∞—á–µ–Ω–∏–µ: {GameStatus.RESERVED}")
        else:
            print("‚ùå –°—Ç–∞—Ç—É—Å RESERVED –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ GameStatus")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã
        print("\nüìã –í—Å–µ —Å—Ç–∞—Ç—É—Å—ã –∏–≥—Ä:")
        for status in GameStatus:
            print(f"   - {status.name}: {status.value}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ GameStatus: {e}")


def test_game_model_fields():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ –º–æ–¥–µ–ª—å Game"""
    print("\nüß™ TEST 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ Game")
    print("="*50)
    
    try:
        from server import Game
        from datetime import datetime
        
        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—É—é –∏–≥—Ä—É
        test_game = Game(
            id="test-123",
            creator_id="user-1",
            bet_amount=10.0,
            bet_gems={"Ruby": 2},
            status="WAITING"
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
        fields_to_check = ['reserved_by', 'reserved_at', 'reservation_expires_at']
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è:")
        for field in fields_to_check:
            if hasattr(test_game, field):
                print(f"‚úÖ –ü–æ–ª–µ '{field}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –º–æ–¥–µ–ª—å Game")
            else:
                print(f"‚ùå –ü–æ–ª–µ '{field}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –º–æ–¥–µ–ª–∏ Game")
                
        # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è
        print("\nüìù –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è:")
        try:
            test_game.reserved_by = "user-2"
            test_game.reserved_at = datetime.utcnow()
            test_game.reservation_expires_at = datetime.utcnow()
            test_game.status = "RESERVED"
            print("‚úÖ –ó–Ω–∞—á–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–Ω–∞—á–µ–Ω–∏–π: {e}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–æ–¥–µ–ª–∏ Game: {e}")


def test_api_endpoints():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    print("\nüß™ TEST 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")
    print("="*50)
    
    try:
        from server import api_router
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã
        routes = []
        for route in api_router.routes:
            if hasattr(route, 'path') and hasattr(route, 'methods'):
                routes.append({
                    'path': route.path,
                    'methods': list(route.methods) if route.methods else []
                })
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
        required_endpoints = [
            ('/api/games/{game_id}/reserve', 'POST'),
            ('/api/games/{game_id}/unreserve', 'POST')
        ]
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è:")
        for path, method in required_endpoints:
            found = any(
                route['path'] == path and method in route['methods'] 
                for route in routes
            )
            if found:
                print(f"‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç {method} {path} –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå –≠–Ω–¥–ø–æ–∏–Ω—Ç {method} {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∏–≥—Ä–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        print("\nüìã –í—Å–µ –∏–≥—Ä–æ–≤—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
        game_routes = [r for r in routes if '/games' in r['path']]
        for route in sorted(game_routes, key=lambda x: x['path']):
            methods_str = ', '.join(route['methods'])
            print(f"   {methods_str:6} {route['path']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤: {e}")


def test_filter_logic():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä"""
    print("\nüß™ TEST 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
    print("="*50)
    
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞—Ö:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–¥–µ
    backend_file = os.path.join(os.path.dirname(__file__), 'backend', 'server.py')
    
    try:
        with open(backend_file, 'r') as f:
            content = f.read()
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ RESERVED –≤ get_available_games
        if 'GameStatus.RESERVED' in content and 'get_available_games' in content:
            print("‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è RESERVED –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ get_available_games")
        else:
            print("‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é RESERVED –≤ get_available_games")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ get_active_bot_games
        if 'get_active_bot_games' in content:
            print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç get_active_bot_games –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ö†Ô∏è  –≠–Ω–¥–ø–æ–∏–Ω—Ç get_active_bot_games –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ find_available_bets_for_bot
        if 'find_available_bets_for_bot' in content and '# Exclude RESERVED games' in content:
            print("‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è RESERVED –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è Human-–±–æ—Ç–æ–≤")
        else:
            print("‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é RESERVED –¥–ª—è Human-–±–æ—Ç–æ–≤")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
        if 'cleanup_expired_reservations' in content:
            print("‚úÖ –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ cleanup_expired_reservations –¥–æ–±–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚ùå –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ cleanup_expired_reservations –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–∞: {e}")


def test_frontend_changes():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ frontend"""
    print("\nüß™ TEST 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    print("="*50)
    
    frontend_files = {
        'Lobby.js': os.path.join(os.path.dirname(__file__), 'frontend', 'src', 'components', 'Lobby.js'),
        'JoinBattleModal.js': os.path.join(os.path.dirname(__file__), 'frontend', 'src', 'components', 'JoinBattleModal.js')
    }
    
    for filename, filepath in frontend_files.items():
        print(f"\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ {filename}:")
        try:
            with open(filepath, 'r') as f:
                content = f.read()
                
            if filename == 'Lobby.js':
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º handleOpenJoinBattle
                if 'async (game)' in content and '/reserve' in content:
                    print("‚úÖ handleOpenJoinBattle –æ–±–Ω–æ–≤–ª—ë–Ω –¥–ª—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è")
                else:
                    print("‚ùå handleOpenJoinBattle –Ω–µ –æ–±–Ω–æ–≤–ª—ë–Ω")
                    
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥–µ–º–æ–≤
                if 'Insufficient gems to join this bet' in content:
                    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ –≥–µ–º–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                else:
                    print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ –≥–µ–º–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º handleCloseJoinBattle
                if 'gameJoined = false' in content and '/unreserve' in content:
                    print("‚úÖ handleCloseJoinBattle –æ–±–Ω–æ–≤–ª—ë–Ω –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
                else:
                    print("‚ùå handleCloseJoinBattle –Ω–µ –æ–±–Ω–æ–≤–ª—ë–Ω")
                    
            elif filename == 'JoinBattleModal.js':
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º isGameJoined
                if 'isGameJoined' in content:
                    print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ isGameJoined –¥–æ–±–∞–≤–ª–µ–Ω–æ")
                else:
                    print("‚ùå –°–æ—Å—Ç–æ—è–Ω–∏–µ isGameJoined –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥–∞—á—É —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
                if 'onClose(isGameJoined)' in content:
                    print("‚úÖ –ü–µ—Ä–µ–¥–∞—á–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")
                else:
                    print("‚ùå –ü–µ—Ä–µ–¥–∞—á–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {filename}: {e}")


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞–≤–æ–∫")
    print("="*50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_game_status_enum()
    test_game_model_fields()
    test_api_endpoints()
    test_filter_logic()
    test_frontend_changes()
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("   –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã.")


if __name__ == "__main__":
    main()