# üî• –ü–ê–¢–ß –î–õ–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø –ü–û–õ–ù–û–ì–û –°–ë–†–û–°–ê –ë–î

## 1. BACKEND –ò–ó–ú–ï–ù–ï–ù–ò–Ø (server.py):

### –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤ auth_utils.py:
async def get_current_super_admin(token: str = Depends(oauth2_scheme)):
    user = await get_current_user(token)
    if user.role != "SUPER_ADMIN":
        raise HTTPException(status_code=403, detail="–¢–æ–ª—å–∫–æ SUPER_ADMIN")
    return user

### –î–æ–±–∞–≤–∏—Ç—å endpoint –≤ server.py:
@api_router.post("/admin/database/full-reset")
async def full_database_reset(
    request_data: dict = Body(...),
    current_user: User = Depends(get_current_super_admin)
):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if request_data.get('confirmation') != '–ü–û–õ–ù–´–ô –°–ë–†–û–°':
        raise HTTPException(400, "–ù–µ–≤–µ—Ä–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥–º–∏–Ω–æ–≤
    admin_roles = ['SUPER_ADMIN', 'ADMIN', 'MODERATOR'] 
    admin_users = await db.users.find({"role": {"$in": admin_roles}}).to_list(None)
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤
    collections = ["users", "games", "bots", "transactions"]
    total_deleted = 0
    
    for collection_name in collections:
        if collection_name == "users":
            result = await db[collection_name].delete_many({"role": {"$nin": admin_roles}})
        else:
            result = await db[collection_name].delete_many({})
        total_deleted += result.deleted_count
    
    return {"success": True, "total_deleted": total_deleted}

## 2. FRONTEND –ò–ó–ú–ï–ù–ï–ù–ò–Ø (AdminPanel.js):

### –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ:
const [fullResetLoading, setFullResetLoading] = useState(false);

### –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ "–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à":
{user?.role === 'SUPER_ADMIN' && (
  <button onClick={fullDatabaseReset} disabled={fullResetLoading}
    className="px-4 py-2 bg-red-600 hover:bg-red-700 border-2 border-red-500 rounded-lg text-white font-bold">
    üî• –°–ë–†–û–° –ë–î
  </button>
)}
