import React, { useState, useEffect } from 'react';
import { useNotifications } from './NotificationContext';
import Loader from './Loader';

const NotificationSettings = () => {
  const { 
    notificationSettings, 
    updateNotificationSettings, 
    loading 
  } = useNotifications();
  
  const [settings, setSettings] = useState({
    bet_accepted: true,
    match_results: true,
    commission_freeze: true,
    gem_gifts: true,
    system_messages: true,
    admin_notifications: true
  });
  
  const [saving, setSaving] = useState(false);
  const [saveStatus, setSaveStatus] = useState('');

  // Load settings when component mounts or settings change
  useEffect(() => {
    if (notificationSettings) {
      setSettings(notificationSettings);
    }
  }, [notificationSettings]);

  const handleSettingChange = async (key, value) => {
    const newSettings = { ...settings, [key]: value };
    setSettings(newSettings);
    
    setSaving(true);
    setSaveStatus('');
    
    try {
      const success = await updateNotificationSettings(newSettings);
      if (success) {
        setSaveStatus('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
        setTimeout(() => setSaveStatus(''), 3000);
      } else {
        setSaveStatus('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
        setTimeout(() => setSaveStatus(''), 3000);
      }
    } catch (error) {
      setSaveStatus('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
      setTimeout(() => setSaveStatus(''), 3000);
    } finally {
      setSaving(false);
    }
  };

  const settingsConfig = [
    { 
      key: 'bet_accepted', 
      label: '–ü—Ä–∏–Ω—è—Ç–∏–µ —Å—Ç–∞–≤–æ–∫', 
      emoji: 'üéØ',
      description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–∞—à—É —Å—Ç–∞–≤–∫—É'
    },
    { 
      key: 'match_results', 
      label: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∞—Ç—á–µ–π', 
      emoji: 'üèÜ',
      description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–±–µ–¥–∞—Ö, –ø–æ—Ä–∞–∂–µ–Ω–∏—è—Ö –∏ –Ω–∏—á—å–∏—Ö'
    },
    { 
      key: 'commission_freeze', 
      label: '–ó–∞–º–æ—Ä–æ–∑–∫–∞ –∫–æ–º–∏—Å—Å–∏–∏', 
      emoji: '‚ùÑÔ∏è',
      description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–º–æ—Ä–æ–∑–∫–µ –∏ —Ä–∞–∑–º–æ—Ä–æ–∑–∫–µ –∫–æ–º–∏—Å—Å–∏–∏'
    },
    { 
      key: 'gem_gifts', 
      label: '–ü–æ–¥–∞—Ä–∫–∏ –≥–µ–º–æ–≤', 
      emoji: 'üíé',
      description: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –≥–µ–º–æ–≤'
    },
    { 
      key: 'system_messages', 
      label: '–°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è', 
      emoji: 'üì¢',
      description: '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã, —Ç–µ—Ö—Ä–∞–±–æ—Ç—ã, –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏'
    },
    { 
      key: 'admin_notifications', 
      label: '–ê–¥–º–∏–Ω-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
      emoji: 'üõ°Ô∏è',
      description: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è'
    }
  ];

  if (loading) {
    return (
      <div className="bg-surface-card p-6 rounded-lg">
        <div className="flex items-center space-x-2 mb-4">
          <Loader size={20} ariaLabel="Loading notification settings" />
        </div>
      </div>
    );
  }

  return (
    <div className="bg-surface-card border border-accent-primary border-opacity-30 rounded-lg p-6">
      <div className="flex items-center justify-between mb-6">
        <h3 className="text-white text-xl font-rajdhani font-bold">üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
        {saveStatus && (
          <div className={`text-sm px-3 py-1 rounded ${
            saveStatus.includes('–û—à–∏–±–∫–∞') 
              ? 'bg-red-600 bg-opacity-20 text-red-400' 
              : 'bg-green-600 bg-opacity-20 text-green-400'
          }`}>
            {saveStatus}
          </div>
        )}
      </div>
      
      <div className="space-y-4">
        {settingsConfig.map(({ key, label, emoji, description }) => (
          <div key={key} className="flex items-start justify-between p-4 bg-surface-sidebar bg-opacity-50 rounded-lg border border-gray-700">
            <div className="flex items-start space-x-3 flex-1">
              <span className="text-2xl mt-1">{emoji}</span>
              <div className="flex-1">
                <h4 className="text-white font-roboto font-medium">{label}</h4>
                <p className="text-text-secondary text-sm mt-1">{description}</p>
              </div>
            </div>
            
            <div className="flex items-center ml-4">
              {saving && (
                <Loader size={16} ariaLabel="Saving notification settings" />
              )}
              <label className="relative inline-flex items-center cursor-pointer">
                <input
                  type="checkbox"
                  checked={settings[key] || false}
                  onChange={(e) => handleSettingChange(key, e.target.checked)}
                  disabled={saving}
                  className="sr-only peer"
                />
                <div className="w-11 h-6 bg-gray-600 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-accent-primary peer-focus:ring-opacity-25 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-accent-primary disabled:opacity-50"></div>
              </label>
            </div>
          </div>
        ))}
      </div>

      <div className="mt-6 p-4 bg-surface-sidebar bg-opacity-30 rounded-lg border border-gray-700">
        <div className="flex items-start space-x-3">
          <span className="text-lg">üí°</span>
          <div>
            <h5 className="text-white font-roboto font-medium mb-1">–ü—Ä–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h5>
            <p className="text-text-secondary text-sm">
              –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–º–æ–≥–∞—é—Ç –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ –∏–≥—Ä–µ. 
              –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –ª—é–±–æ–π —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω–∏ –≤–∞–º –Ω–µ –Ω—É–∂–Ω—ã.
              –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default NotificationSettings;