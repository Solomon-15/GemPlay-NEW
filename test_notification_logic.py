#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ —Å—Ç–∞–≤–∫—É
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'backend'))

def test_gem_combination_function():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –≥–µ–º–æ–≤"""
    print("\nüß™ TEST 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ check_gem_combination_possible")
    print("="*50)
    
    try:
        from server import check_gem_combination_possible
        import asyncio
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
        test_cases = [
            {
                "name": "Exact match",
                "gems": [{"type": "Ruby", "available_quantity": 2, "price": 5.0}],
                "target": 10.0,
                "expected": True
            },
            {
                "name": "Multiple gem types - possible",
                "gems": [
                    {"type": "Ruby", "available_quantity": 2, "price": 5.0},
                    {"type": "Emerald", "available_quantity": 3, "price": 2.0}
                ],
                "target": 12.0,  # 2*5 + 1*2 = 12
                "expected": True
            },
            {
                "name": "Multiple gem types - impossible",
                "gems": [
                    {"type": "Ruby", "available_quantity": 2, "price": 5.0},
                    {"type": "Emerald", "available_quantity": 3, "price": 2.0}
                ],
                "target": 13.0,  # Can't make 13 from 5 and 2
                "expected": False
            },
            {
                "name": "Insufficient total value",
                "gems": [{"type": "Ruby", "available_quantity": 1, "price": 5.0}],
                "target": 10.0,
                "expected": False
            },
            {
                "name": "Zero target",
                "gems": [{"type": "Ruby", "available_quantity": 1, "price": 5.0}],
                "target": 0.0,
                "expected": True
            },
            {
                "name": "Complex combination",
                "gems": [
                    {"type": "Diamond", "available_quantity": 3, "price": 10.0},
                    {"type": "Ruby", "available_quantity": 5, "price": 5.0},
                    {"type": "Sapphire", "available_quantity": 2, "price": 3.0}
                ],
                "target": 28.0,  # 2*10 + 1*5 + 1*3 = 28
                "expected": True
            }
        ]
        
        print("üìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π:")
        for test in test_cases:
            result = asyncio.run(check_gem_combination_possible(test["gems"], test["target"]))
            status = "‚úÖ" if result == test["expected"] else "‚ùå"
            print(f"{status} {test['name']}: target=${test['target']}, result={result}, expected={test['expected']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")


def test_error_messages():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö"""
    print("\nüß™ TEST 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö")
    print("="*50)
    
    backend_file = os.path.join(os.path.dirname(__file__), 'backend', 'server.py')
    
    try:
        with open(backend_file, 'r') as f:
            content = f.read()
            
        error_messages = [
            ("You don't have enough gems ‚Äî purchase more.", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–µ–º–æ–≤"),
            ("You don't possess the required gem combination. Please buy from the Gem Shop.", "–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è"),
            ("Insufficient funds for the commission ‚Äî please top up your balance.", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é")
        ]
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö:")
        for message, description in error_messages:
            if message in content:
                print(f"‚úÖ {description}: '{message}'")
            else:
                print(f"‚ùå {description}: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")


def test_check_order():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—è–¥–∫–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫"""
    print("\nüß™ TEST 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—è–¥–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫")
    print("="*50)
    
    backend_file = os.path.join(os.path.dirname(__file__), 'backend', 'server.py')
    
    try:
        with open(backend_file, 'r') as f:
            content = f.read()
            
        # –ù–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é reserve_game
        reserve_start = content.find("async def reserve_game(")
        if reserve_start == -1:
            print("‚ùå –§—É–Ω–∫—Ü–∏—è reserve_game –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
            
        # –í–∑—è—Ç—å —á–∞—Å—Ç—å –∫–æ–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏
        reserve_end = content.find("async def", reserve_start + 1)
        reserve_function = content[reserve_start:reserve_end if reserve_end != -1 else reserve_start + 5000]
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫
        check1_pos = reserve_function.find("Check 1: Total gem value")
        check2_pos = reserve_function.find("Check 2: Can form exact combination")
        check3_pos = reserve_function.find("Check 3: Commission")
        
        print("üìã –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫:")
        if check1_pos != -1 and check2_pos != -1 and check3_pos != -1:
            if check1_pos < check2_pos < check3_pos:
                print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫:")
                print("   1. –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–º–æ–≤")
                print("   2. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–±—Ä–∞—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é")
                print("   3. –ö–æ–º–∏—Å—Å–∏—è")
            else:
                print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫")
        else:
            print("‚ùå –ù–µ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")


def test_bot_commission_logic():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –±–æ—Ç–æ–≤"""
    print("\nüß™ TEST 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –±–æ—Ç–æ–≤")
    print("="*50)
    
    backend_file = os.path.join(os.path.dirname(__file__), 'backend', 'server.py')
    
    try:
        with open(backend_file, 'r') as f:
            content = f.read()
            
        # –ù–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é reserve_game
        reserve_start = content.find("async def reserve_game(")
        reserve_end = content.find("async def", reserve_start + 1)
        reserve_function = content[reserve_start:reserve_end if reserve_end != -1 else reserve_start + 5000]
        
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –¥–ª—è –±–æ—Ç–æ–≤:")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤
        if "bot_check = await db.bots.find_one" in reserve_function:
            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è human-–±–æ—Ç–æ–≤
        if "human_bot_check = await db.human_bots.find_one" in reserve_function:
            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è human-–±–æ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è human-–±–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–∏—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤
        if "Only skip commission for regular bots" in reserve_function:
            print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–∏—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print("‚ùå –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–∏—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")


def test_frontend_integration():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å frontend"""
    print("\nüß™ TEST 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Frontend")
    print("="*50)
    
    lobby_file = os.path.join(os.path.dirname(__file__), 'frontend', 'src', 'components', 'Lobby.js')
    
    try:
        with open(lobby_file, 'r') as f:
            content = f.read()
            
        print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ Lobby.js:")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        if "userTotalGemValue < betAmount" not in content:
            print("‚úÖ –°—Ç–∞—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–º–æ–≤ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ frontend")
        else:
            print("‚ùå –°—Ç–∞—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–º–æ–≤ –≤—Å—ë –µ—â—ë –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –æ—Ç backend
        if "error.response?.data?.detail" in content:
            print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        else:
            print("‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ showError
        if "showError(error.response.data.detail)" in content:
            print("‚úÖ –û—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
        else:
            print("‚ùå showError –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–æ–∫")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –≤—Ö–æ–¥–µ –Ω–∞ —Å—Ç–∞–≤–∫—É")
    print("="*50)
    
    test_gem_combination_function()
    test_error_messages()
    test_check_order()
    test_bot_commission_logic()
    test_frontend_integration()
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìù –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞:")
    print("1. –ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –≥–µ–º–æ–≤: 'You don't have enough gems ‚Äî purchase more.'")
    print("2. –ü—Ä–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–±—Ä–∞—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é: 'You don't possess the required gem combination. Please buy from the Gem Shop.'")
    print("3. –ü—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–æ–º–∏—Å—Å–∏—é: 'Insufficient funds for the commission ‚Äî please top up your balance.'")
    print("\n‚ö†Ô∏è  –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: Human-–±–æ—Ç—ã –∏ –∂–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏ –ø–ª–∞—Ç—è—Ç –∫–æ–º–∏—Å—Å–∏—é, –æ–±—ã—á–Ω—ã–µ –±–æ—Ç—ã - –Ω–µ—Ç.")


if __name__ == "__main__":
    main()