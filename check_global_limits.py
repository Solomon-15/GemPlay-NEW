#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤ –±–æ—Ç–æ–≤
"""

import asyncio
from pymongo import MongoClient
import os

async def check_global_limits():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤ –±–æ—Ç–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = os.environ.get('MONGO_URL', 'mongodb://localhost:27017/gemplay')
    client = MongoClient(mongo_url)
    db = client.gemplay
    
    print("=== –ü–†–û–í–ï–†–ö–ê –ì–õ–û–ë–ê–õ–¨–ù–´–• –õ–ò–ú–ò–¢–û–í –ë–û–¢–û–í ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
    bot_settings = db.bot_settings.find_one({"id": "bot_settings"})
    if bot_settings:
        max_regular = bot_settings.get("max_active_bets_regular", 50)
        max_human = bot_settings.get("max_active_bets_human", 30)
        print(f"üìä –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã:")
        print(f"   - Regular –±–æ—Ç—ã: {max_regular}")
        print(f"   - Human –±–æ—Ç—ã: {max_human}")
    else:
        max_regular = 50
        max_human = 30
        print(f"‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è defaults:")
        print(f"   - Regular –±–æ—Ç—ã: {max_regular}")
        print(f"   - Human –±–æ—Ç—ã: {max_human}")
    
    print("\n=== –¢–ï–ö–£–©–ò–ï –ê–ö–¢–ò–í–ù–´–ï –°–¢–ê–í–ö–ò –ë–û–¢–û–í ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ Regular –±–æ—Ç–æ–≤
    regular_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "REGULAR"},
            {"metadata.bot_type": "REGULAR"}
        ]
    })
    print(f"ü§ñ Regular –±–æ—Ç—ã: {regular_bets}/{max_regular}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ Human –±–æ—Ç–æ–≤
    human_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "HUMAN"},
            {"metadata.bot_type": "HUMAN"}
        ]
    })
    print(f"üë§ Human –±–æ—Ç—ã: {human_bets}/{max_human}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤
    print("\n=== –ê–ù–ê–õ–ò–ó –°–û–ë–õ–Æ–î–ï–ù–ò–Ø –õ–ò–ú–ò–¢–û–í ===")
    
    if regular_bets > max_regular:
        print(f"‚ùå –ü–†–ï–í–´–®–ï–ù–ò–ï –õ–ò–ú–ò–¢–ê Regular –±–æ—Ç–æ–≤: {regular_bets} > {max_regular}")
    else:
        print(f"‚úÖ Regular –±–æ—Ç—ã –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞: {regular_bets}/{max_regular}")
    
    if human_bets > max_human:
        print(f"‚ùå –ü–†–ï–í–´–®–ï–ù–ò–ï –õ–ò–ú–ò–¢–ê Human –±–æ—Ç–æ–≤: {human_bets} > {max_human}")
    else:
        print(f"‚úÖ Human –±–æ—Ç—ã –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞: {human_bets}/{max_human}")
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_bot_bets = regular_bets + human_bets
    total_limit = max_regular + max_human
    print(f"\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   - –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ –±–æ—Ç–æ–≤: {total_bot_bets}")
    print(f"   - –û–±—â–∏–π –ª–∏–º–∏—Ç: {total_limit}")
    print(f"   - –ó–∞–≥—Ä—É–∑–∫–∞: {total_bot_bets/total_limit*100:.1f}%")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –±–æ—Ç—ã
    print("\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –û–¢–î–ï–õ–¨–ù–´–ú –ë–û–¢–ê–ú ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤
    active_bots = list(db.bots.find({"is_active": True}))
    print(f"üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤: {len(active_bots)}")
    
    for bot in active_bots:
        bot_active_bets = db.games.count_documents({
            "creator_id": bot["id"],
            "status": "WAITING"
        })
        bot_type = bot.get("bot_type", "REGULAR")
        print(f"   ü§ñ {bot['name']} ({bot_type}): {bot_active_bets} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫")
    
    client.close()

if __name__ == "__main__":
    asyncio.run(check_global_limits())