#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –∑–∞–º–æ—Ä–æ–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –ø—Ä–∏ –∏–≥—Ä–µ —Å –æ–±—ã—á–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏
"""
import asyncio
import os
import sys
from motor.motor_asyncio import AsyncIOMotorClient
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Å–µ—Ä–≤–µ—Ä—É
sys.path.append('/app/backend')

from server import db

async def test_regular_bot_commission_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤"""
    print("üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤...")
    
    # –ù–∞–π–¥–µ–º –∏–≥—Ä—É —Å –æ–±—ã—á–Ω—ã–º –±–æ—Ç–æ–º
    regular_bot_game = await db.games.find_one({
        "creator_type": "bot",
        "bot_type": "REGULAR",
        "status": "ACTIVE"
    })
    
    if regular_bot_game:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–≥—Ä–∞ —Å –æ–±—ã—á–Ω—ã–º –±–æ—Ç–æ–º: {regular_bot_game['id']}")
        print(f"   –°–æ–∑–¥–∞—Ç–µ–ª—å: {regular_bot_game['creator_id']}")
        print(f"   –¢–∏–ø —Å–æ–∑–¥–∞—Ç–µ–ª—è: {regular_bot_game.get('creator_type', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        print(f"   –¢–∏–ø –±–æ—Ç–∞: {regular_bot_game.get('bot_type', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        print(f"   –§–ª–∞–≥ regular bot game: {regular_bot_game.get('is_regular_bot_game', False)}")
        print(f"   –°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: ${regular_bot_game['bet_amount']}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞
        if regular_bot_game.get('opponent_id'):
            opponent = await db.users.find_one({"id": regular_bot_game['opponent_id']})
            if opponent:
                print(f"   –û–ø–ø–æ–Ω–µ–Ω—Ç: {opponent.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"   –ë–∞–ª–∞–Ω—Å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞: ${opponent.get('virtual_balance', 0)}")
                print(f"   –ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ —É –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞: ${opponent.get('frozen_balance', 0)}")
    else:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–≥—Ä —Å –æ–±—ã—á–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏")
    
    # –ù–∞–π–¥–µ–º –∏–≥—Ä—É –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    user_game = await db.games.find_one({
        "creator_type": "user",
        "status": "ACTIVE"
    })
    
    if user_game:
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–≥—Ä–∞ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: {user_game['id']}")
        print(f"   –°–æ–∑–¥–∞—Ç–µ–ª—å: {user_game['creator_id']}")
        print(f"   –¢–∏–ø —Å–æ–∑–¥–∞—Ç–µ–ª—è: {user_game.get('creator_type', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        print(f"   –°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: ${user_game['bet_amount']}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª—è
        creator = await db.users.find_one({"id": user_game['creator_id']})
        if creator:
            print(f"   –°–æ–∑–¥–∞—Ç–µ–ª—å: {creator.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   –ë–∞–ª–∞–Ω—Å —Å–æ–∑–¥–∞—Ç–µ–ª—è: ${creator.get('virtual_balance', 0)}")
            print(f"   –ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ —É —Å–æ–∑–¥–∞—Ç–µ–ª—è: ${creator.get('frozen_balance', 0)}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞
        if user_game.get('opponent_id'):
            opponent = await db.users.find_one({"id": user_game['opponent_id']})
            if opponent:
                print(f"   –û–ø–ø–æ–Ω–µ–Ω—Ç: {opponent.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"   –ë–∞–ª–∞–Ω—Å –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞: ${opponent.get('virtual_balance', 0)}")
                print(f"   –ó–∞–º–æ—Ä–æ–∂–µ–Ω–æ —É –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞: ${opponent.get('frozen_balance', 0)}")
    else:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–≥—Ä –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤
    total_frozen_pipeline = [
        {"$group": {"_id": None, "total_frozen": {"$sum": "$frozen_balance"}}}
    ]
    frozen_result = await db.users.aggregate(total_frozen_pipeline).to_list(1)
    total_frozen = frozen_result[0]["total_frozen"] if frozen_result else 0
    
    print(f"\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤: ${total_frozen}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä –ø–æ —Ç–∏–ø–∞–º
    game_stats = await db.games.aggregate([
        {"$group": {
            "_id": "$creator_type",
            "count": {"$sum": 1}
        }}
    ]).to_list(10)
    
    print(f"   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä –ø–æ —Ç–∏–ø–∞–º:")
    for stat in game_stats:
        print(f"     {stat['_id']}: {stat['count']} –∏–≥—Ä")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤
    regular_bots = await db.bots.find({"bot_type": "REGULAR"}).to_list(10)
    print(f"   –û–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(regular_bots)}")
    
    print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_regular_bot_commission_logic())