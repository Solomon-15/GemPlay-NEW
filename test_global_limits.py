#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤ –±–æ—Ç–æ–≤
"""

import asyncio
from pymongo import MongoClient
import os
import uuid
from datetime import datetime

async def test_global_limits():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = os.environ.get('MONGO_URL', 'mongodb://localhost:27017/gemplay')
    client = MongoClient(mongo_url)
    db = client.gemplay
    
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–õ–û–ë–ê–õ–¨–ù–´–• –õ–ò–ú–ò–¢–û–í ===")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Regular –±–æ—Ç–∞
    test_bot = {
        "id": str(uuid.uuid4()),
        "name": "Test Regular Bot",
        "bot_type": "REGULAR",
        "is_active": True,
        "cycle_length": 12,
        "cycle_amount": 1000,
        "min_bet": 10,
        "max_bet": 100,
        "win_percentage": 60,
        "current_limit": 10,
        "active_bets": 0,
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow()
    }
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
    db.bots.insert_one(test_bot)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç: {test_bot['name']} ({test_bot['bot_type']})")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Human –±–æ—Ç–∞
    test_human_bot = {
        "id": str(uuid.uuid4()),
        "name": "Test Human Bot",
        "bot_type": "HUMAN",
        "is_active": True,
        "cycle_length": 12,
        "cycle_amount": 1000,
        "min_bet": 10,
        "max_bet": 100,
        "win_percentage": 60,
        "current_limit": 10,
        "active_bets": 0,
        "created_at": datetime.utcnow(),
        "updated_at": datetime.utcnow()
    }
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ Human –±–æ—Ç–∞
    db.bots.insert_one(test_human_bot)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π Human –±–æ—Ç: {test_human_bot['name']} ({test_human_bot['bot_type']})")
    
    # –¢–µ–ø–µ—Ä—å —Å–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–≤–æ–∫ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏–º–∏—Ç—ã
    print("\n=== –°–ò–ú–£–õ–Ø–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –°–¢–ê–í–û–ö ===")
    
    # –°–æ–∑–¥–∞–µ–º 5 —Å—Ç–∞–≤–æ–∫ –¥–ª—è Regular –±–æ—Ç–∞
    for i in range(5):
        game = {
            "id": str(uuid.uuid4()),
            "creator_id": test_bot["id"],
            "creator_type": "bot",
            "is_bot_game": True,
            "bot_type": "REGULAR",
            "status": "WAITING",
            "bet_amount": 50,
            "gems": {"Ruby": 50},
            "created_at": datetime.utcnow(),
            "metadata": {"bot_type": "REGULAR"}
        }
        db.games.insert_one(game)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã 5 —Å—Ç–∞–≤–æ–∫ –¥–ª—è Regular –±–æ—Ç–∞")
    
    # –°–æ–∑–¥–∞–µ–º 3 —Å—Ç–∞–≤–∫–∏ –¥–ª—è Human –±–æ—Ç–∞
    for i in range(3):
        game = {
            "id": str(uuid.uuid4()),
            "creator_id": test_human_bot["id"],
            "creator_type": "bot",
            "is_bot_game": True,
            "bot_type": "HUMAN",
            "status": "WAITING",
            "bet_amount": 50,
            "gems": {"Ruby": 50},
            "created_at": datetime.utcnow(),
            "metadata": {"bot_type": "HUMAN"}
        }
        db.games.insert_one(game)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã 3 —Å—Ç–∞–≤–∫–∏ –¥–ª—è Human –±–æ—Ç–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã
    print("\n=== –ü–†–û–í–ï–†–ö–ê –õ–ò–ú–ò–¢–û–í –ü–û–°–õ–ï –°–û–ó–î–ê–ù–ò–Ø –°–¢–ê–í–û–ö ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    bot_settings = db.bot_settings.find_one({"id": "bot_settings"})
    max_regular = bot_settings.get("max_active_bets_regular", 50)
    max_human = bot_settings.get("max_active_bets_human", 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Regular –±–æ—Ç—ã
    regular_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "REGULAR"},
            {"metadata.bot_type": "REGULAR"}
        ]
    })
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Human –±–æ—Ç—ã  
    human_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "HUMAN"},
            {"metadata.bot_type": "HUMAN"}
        ]
    })
    
    print(f"ü§ñ Regular –±–æ—Ç—ã: {regular_bets}/{max_regular}")
    print(f"üë§ Human –±–æ—Ç—ã: {human_bets}/{max_human}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–∏–º–∏—Ç—ã —Å–æ–±–ª—é–¥–∞—é—Ç—Å—è
    if regular_bets <= max_regular:
        print("‚úÖ –õ–∏–º–∏—Ç Regular –±–æ—Ç–æ–≤ —Å–æ–±–ª—é–¥–µ–Ω")
    else:
        print("‚ùå –õ–∏–º–∏—Ç Regular –±–æ—Ç–æ–≤ –ø—Ä–µ–≤—ã—à–µ–Ω")
    
    if human_bets <= max_human:
        print("‚úÖ –õ–∏–º–∏—Ç Human –±–æ—Ç–æ–≤ —Å–æ–±–ª—é–¥–µ–Ω")
    else:
        print("‚ùå –õ–∏–º–∏—Ç Human –±–æ—Ç–æ–≤ –ø—Ä–µ–≤—ã—à–µ–Ω")
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\n=== –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• ===")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∏–≥—Ä—ã
    db.games.delete_many({
        "creator_id": {"$in": [test_bot["id"], test_human_bot["id"]]}
    })
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –±–æ—Ç—ã
    db.bots.delete_many({
        "id": {"$in": [test_bot["id"], test_human_bot["id"]]}
    })
    
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
    
    client.close()

if __name__ == "__main__":
    asyncio.run(test_global_limits())