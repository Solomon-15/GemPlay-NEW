#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ –±–æ—Ç–æ–≤
"""

import asyncio
from pymongo import MongoClient
import os

async def cleanup_excess_bot_bets():
    """–û—á–∏—Å—Ç–∫–∞ –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ –±–æ—Ç–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = os.environ.get('MONGO_URL', 'mongodb://localhost:27017')
    client = MongoClient(mongo_url)
    db_name = os.environ.get('DB_NAME', 'gemplay_db')
    db = client[db_name]
    
    print(f"=== –û–ß–ò–°–¢–ö–ê –ò–ó–ë–´–¢–û–ß–ù–´–• –°–¢–ê–í–û–ö –ë–û–¢–û–í –≤ {db_name} ===")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
    bot_settings = db.bot_settings.find_one({"id": "bot_settings"})
    if bot_settings:
        max_regular = bot_settings.get("max_active_bets_regular", 50)
        max_human = bot_settings.get("max_active_bets_human", 30)
        print(f"üìä –¢–µ–∫—É—â–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã:")
        print(f"   - Regular –±–æ—Ç—ã: {max_regular}")
        print(f"   - Human –±–æ—Ç—ã: {max_human}")
    else:
        print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –±–æ—Ç–æ–≤
    bots = list(db.bots.find({"is_active": True}))
    print(f"üë• –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤: {len(bots)}")
    
    if not bots:
        print("‚ùå –ë–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –±–æ—Ç—ã...")
        all_bots = list(db.bots.find({}))
        print(f"üë• –í—Å–µ–≥–æ –±–æ—Ç–æ–≤ –≤ –±–∞–∑–µ: {len(all_bots)}")
        for bot in all_bots:
            print(f"  - {bot.get('name', bot['id'])} (active: {bot.get('is_active', False)})")
        return
    
    total_deleted = 0
    
    for bot in bots:
        bot_id = bot["id"]
        bot_name = bot.get("name", f"Bot #{bot_id[:3]}")
        bot_type = bot.get("bot_type", "REGULAR")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –±–æ—Ç–∞
        active_bets = list(db.games.find({
            "creator_id": bot_id,
            "status": "WAITING"
        }).sort("created_at", -1))  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
        
        current_count = len(active_bets)
        individual_limit = bot.get("current_limit") or bot.get("cycle_games", 12)
        
        print(f"\nü§ñ {bot_name} ({bot_type}): {current_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫, –ª–∏–º–∏—Ç: {individual_limit}")
        
        if current_count > individual_limit:
            # –£–¥–∞–ª—è–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ)
            bets_to_delete = active_bets[individual_limit:]
            
            for bet in bets_to_delete:
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞–≤–∫—É
                db.games.delete_one({"id": bet["id"]})
                total_deleted += 1
                print(f"   ‚ùå –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞–≤–∫–∞ {bet['id']} ({bet['bet_amount']}$)")
            
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(bets_to_delete)} –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫")
        else:
            print(f"   ‚úÖ –õ–∏–º–∏—Ç —Å–æ–±–ª—é–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    print(f"\n=== –ü–†–û–í–ï–†–ö–ê –ì–õ–û–ë–ê–õ–¨–ù–´–• –õ–ò–ú–ò–¢–û–í –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò ===")
    
    regular_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "REGULAR"},
            {"metadata.bot_type": "REGULAR"}
        ]
    })
    
    human_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "HUMAN"},
            {"metadata.bot_type": "HUMAN"}
        ]
    })
    
    print(f"ü§ñ Regular –±–æ—Ç—ã: {regular_bets}/{max_regular}")
    print(f"üë§ Human –±–æ—Ç—ã: {human_bets}/{max_human}")
    
    if regular_bets > max_regular:
        print(f"‚ùå –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Regular –±–æ—Ç–æ–≤ –≤—Å–µ –µ—â–µ –ø—Ä–µ–≤—ã—à–µ–Ω!")
        # –£–¥–∞–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞–≤–∫–∏
        excess_regular = regular_bets - max_regular
        excess_games = list(db.games.find({
            "creator_type": "bot",
            "is_bot_game": True,
            "status": "WAITING",
            "$or": [
                {"bot_type": "REGULAR"},
                {"metadata.bot_type": "REGULAR"}
            ]
        }).sort("created_at", 1).limit(excess_regular))
        
        for game in excess_games:
            db.games.delete_one({"id": game["id"]})
            total_deleted += 1
            print(f"   ‚ùå –£–¥–∞–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∏–∑–±—ã—Ç–æ—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞ {game['id']}")
    
    if human_bets > max_human:
        print(f"‚ùå –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Human –±–æ—Ç–æ–≤ –≤—Å–µ –µ—â–µ –ø—Ä–µ–≤—ã—à–µ–Ω!")
        # –£–¥–∞–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∞–≤–∫–∏
        excess_human = human_bets - max_human
        excess_games = list(db.games.find({
            "creator_type": "bot",
            "is_bot_game": True,
            "status": "WAITING",
            "$or": [
                {"bot_type": "HUMAN"},
                {"metadata.bot_type": "HUMAN"}
            ]
        }).sort("created_at", 1).limit(excess_human))
        
        for game in excess_games:
            db.games.delete_one({"id": game["id"]})
            total_deleted += 1
            print(f"   ‚ùå –£–¥–∞–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∏–∑–±—ã—Ç–æ—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞ {game['id']}")
    
    print(f"\n‚úÖ –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ —Å—Ç–∞–≤–æ–∫: {total_deleted}")
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    client.close()

if __name__ == "__main__":
    asyncio.run(cleanup_excess_bot_bets())