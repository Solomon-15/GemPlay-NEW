#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
"""

import asyncio
from pymongo import MongoClient
import os
import uuid
from datetime import datetime

async def test_limit_prevention():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
    mongo_url = os.environ.get('MONGO_URL', 'mongodb://localhost:27017/gemplay')
    client = MongoClient(mongo_url)
    db = client.gemplay
    
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–ò–Ø –ü–†–ï–í–´–®–ï–ù–ò–Ø –õ–ò–ú–ò–¢–û–í ===")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∏–∑–∫–∏–µ –ª–∏–º–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    bot_settings = {
        "id": "bot_settings",
        "max_active_bets_regular": 3,  # –Ω–∏–∑–∫–∏–π –ª–∏–º–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        "max_active_bets_human": 2,   # –Ω–∏–∑–∫–∏–π –ª–∏–º–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        "pagination_size": 10,
        "auto_queue_activation": True,
        "priority_type": "order"
    }
    
    db.bot_settings.replace_one(
        {"id": "bot_settings"},
        bot_settings,
        upsert=True
    )
    
    print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∏–∑–∫–∏–µ –ª–∏–º–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   - Regular –±–æ—Ç—ã: {bot_settings['max_active_bets_regular']}")
    print(f"   - Human –±–æ—Ç—ã: {bot_settings['max_active_bets_human']}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏ –¥–æ –ª–∏–º–∏—Ç–∞
    print("\n=== –°–û–ó–î–ê–ù–ò–ï –°–¢–ê–í–û–ö –î–û –õ–ò–ú–ò–¢–ê ===")
    
    # –°–æ–∑–¥–∞–µ–º 3 —Å—Ç–∞–≤–∫–∏ –¥–ª—è Regular –±–æ—Ç–æ–≤ (–¥–æ—Å—Ç–∏–≥–∞–µ–º –ª–∏–º–∏—Ç–∞)
    for i in range(3):
        game = {
            "id": str(uuid.uuid4()),
            "creator_id": str(uuid.uuid4()),
            "creator_type": "bot",
            "is_bot_game": True,
            "bot_type": "REGULAR",
            "status": "WAITING",
            "bet_amount": 50,
            "gems": {"Ruby": 50},
            "created_at": datetime.utcnow(),
            "metadata": {"bot_type": "REGULAR"}
        }
        db.games.insert_one(game)
    
    # –°–æ–∑–¥–∞–µ–º 2 —Å—Ç–∞–≤–∫–∏ –¥–ª—è Human –±–æ—Ç–æ–≤ (–¥–æ—Å—Ç–∏–≥–∞–µ–º –ª–∏–º–∏—Ç–∞)
    for i in range(2):
        game = {
            "id": str(uuid.uuid4()),
            "creator_id": str(uuid.uuid4()),
            "creator_type": "bot",
            "is_bot_game": True,
            "bot_type": "HUMAN",
            "status": "WAITING",
            "bet_amount": 50,
            "gems": {"Ruby": 50},
            "created_at": datetime.utcnow(),
            "metadata": {"bot_type": "HUMAN"}
        }
        db.games.insert_one(game)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã
    regular_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "REGULAR"},
            {"metadata.bot_type": "REGULAR"}
        ]
    })
    
    human_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "HUMAN"},
            {"metadata.bot_type": "HUMAN"}
        ]
    })
    
    print(f"ü§ñ Regular –±–æ—Ç—ã: {regular_bets}/{bot_settings['max_active_bets_regular']}")
    print(f"üë§ Human –±–æ—Ç—ã: {human_bets}/{bot_settings['max_active_bets_human']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–∏–º–∏—Ç—ã –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã
    if regular_bets >= bot_settings['max_active_bets_regular']:
        print("‚úÖ –õ–∏–º–∏—Ç Regular –±–æ—Ç–æ–≤ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç")
    else:
        print("‚ùå –õ–∏–º–∏—Ç Regular –±–æ—Ç–æ–≤ –ù–ï –¥–æ—Å—Ç–∏–≥–Ω—É—Ç")
    
    if human_bets >= bot_settings['max_active_bets_human']:
        print("‚úÖ –õ–∏–º–∏—Ç Human –±–æ—Ç–æ–≤ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç")
    else:
        print("‚ùå –õ–∏–º–∏—Ç Human –±–æ—Ç–æ–≤ –ù–ï –¥–æ—Å—Ç–∏–≥–Ω—É—Ç")
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–î–ê –ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–ò–Ø ===")
    
    # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä–∏–º –∫–æ–¥ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤
    
    # –î–ª—è Regular –±–æ—Ç–æ–≤
    current_regular_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "REGULAR"},
            {"metadata.bot_type": "REGULAR"}
        ]
    })
    
    max_regular = bot_settings['max_active_bets_regular']
    
    if current_regular_bets >= max_regular:
        print(f"üö´ –°–æ–∑–¥–∞–Ω–∏–µ Regular —Å—Ç–∞–≤–∫–∏ –ë–õ–û–ö–ò–†–û–í–ê–ù–û: {current_regular_bets}/{max_regular}")
    else:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ Regular —Å—Ç–∞–≤–∫–∏ –†–ê–ó–†–ï–®–ï–ù–û: {current_regular_bets}/{max_regular}")
    
    # –î–ª—è Human –±–æ—Ç–æ–≤
    current_human_bets = db.games.count_documents({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING",
        "$or": [
            {"bot_type": "HUMAN"},
            {"metadata.bot_type": "HUMAN"}
        ]
    })
    
    max_human = bot_settings['max_active_bets_human']
    
    if current_human_bets >= max_human:
        print(f"üö´ –°–æ–∑–¥–∞–Ω–∏–µ Human —Å—Ç–∞–≤–∫–∏ –ë–õ–û–ö–ò–†–û–í–ê–ù–û: {current_human_bets}/{max_human}")
    else:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ Human —Å—Ç–∞–≤–∫–∏ –†–ê–ó–†–ï–®–ï–ù–û: {current_human_bets}/{max_human}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã
    print("\n=== –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ù–û–†–ú–ê–õ–¨–ù–´–• –õ–ò–ú–ò–¢–û–í ===")
    
    normal_settings = {
        "id": "bot_settings",
        "max_active_bets_regular": 50,
        "max_active_bets_human": 30,
        "pagination_size": 10,
        "auto_queue_activation": True,
        "priority_type": "order"
    }
    
    db.bot_settings.replace_one(
        {"id": "bot_settings"},
        normal_settings,
        upsert=True
    )
    
    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    db.games.delete_many({
        "creator_type": "bot",
        "is_bot_game": True,
        "status": "WAITING"
    })
    
    print("‚úÖ –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
    
    client.close()

if __name__ == "__main__":
    asyncio.run(test_limit_prevention())