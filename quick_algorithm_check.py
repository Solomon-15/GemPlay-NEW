#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –±–æ—Ç–æ–≤
"""

import os
import re

def quick_backend_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ backend"""
    print("üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê BACKEND")
    print("-" * 30)
    
    server_file = "/workspace/backend/server.py"
    
    if not os.path.exists(server_file):
        print("‚ùå server.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(server_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    checks = [
        ("809 –≤ –∫–æ–¥–µ", "exact_cycle_total = 809"),
        ("–ü—Ä–æ—Ü–µ–Ω—Ç—ã 44/36/20", "wins_percentage.*44"),
        ("–ë–∞–ª–∞–Ω—Å 7/6/3", "wins_count.*7"),
        ("–ü—Ä—è–º–æ–π —Ä–∞—Å—á—ë—Ç –ø—Ä–∏–±—ã–ª–∏", "wins_amount.*-.*losses_amount"),
        ("–ê–∫—Ç–∏–≤–Ω—ã–π –ø—É–ª", "wins_amount.*\\+.*losses_amount"),
        ("–£–±—Ä–∞–Ω–∞ pause_on_draw", "pause_on_draw")  # –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–±—Ä–∞–Ω–∞
    ]
    
    results = []
    for name, pattern in checks:
        found = bool(re.search(pattern, content, re.IGNORECASE))
        
        if name == "–£–±—Ä–∞–Ω–∞ pause_on_draw":
            success = not found  # –£—Å–ø–µ—Ö = –ù–ï –Ω–∞–π–¥–µ–Ω–æ
            status = "‚úÖ" if success else "‚ùå"
        else:
            success = found
            status = "‚úÖ" if success else "‚ùå"
        
        print(f"   {status} {name}")
        results.append(success)
    
    return all(results)

def quick_calculation_check():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á—ë—Ç–æ–≤"""
    print(f"\nüßÆ –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –†–ê–°–ß–Å–¢–û–í")
    print("-" * 30)
    
    # –¢–æ—á–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º
    cycle_total = 809
    wins_pct = 44.0
    losses_pct = 36.0
    draws_pct = 20.0
    
    # Half-up –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ
    def half_up(x):
        return int(x + 0.5)
    
    wins = half_up(cycle_total * wins_pct / 100.0)
    losses = half_up(cycle_total * losses_pct / 100.0)
    draws = half_up(cycle_total * draws_pct / 100.0)
    
    total = wins + losses + draws
    active_pool = wins + losses
    profit = wins - losses
    roi = (profit / active_pool * 100) if active_pool > 0 else 0
    
    # –≠—Ç–∞–ª–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    expected = {"total": 809, "wins": 356, "losses": 291, "draws": 162, "profit": 65, "roi": 10.05}
    actual = {"total": total, "wins": wins, "losses": losses, "draws": draws, "profit": profit, "roi": round(roi, 2)}
    
    print(f"   –†–∞—Å—á—ë—Ç—ã: W={wins}, L={losses}, D={draws}, T={total}")
    print(f"   –ü—Ä–∏–±—ã–ª—å: {profit}, ROI: {roi:.2f}%")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞
    all_correct = all(
        abs(actual[key] - expected[key]) < 0.1 if key == "roi" else actual[key] == expected[key]
        for key in expected
    )
    
    if all_correct:
        print("   ‚úÖ –í—Å–µ —Ä–∞—Å—á—ë—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!")
    else:
        print("   ‚ùå –û—à–∏–±–∫–∏ –≤ —Ä–∞—Å—á—ë—Ç–∞—Ö!")
        for key in expected:
            exp = expected[key]
            act = actual[key]
            correct = abs(act - exp) < 0.1 if key == "roi" else act == exp
            print(f"     {key}: {act} ({'‚úÖ' if correct else '‚ùå'} {exp})")
    
    return all_correct

def main():
    print("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –ê–õ–ì–û–†–ò–¢–ú–ê –ë–û–¢–û–í")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    backend_ok = quick_backend_check()
    calc_ok = quick_calculation_check()
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   Backend: {'‚úÖ' if backend_ok else '‚ùå'}")
    print(f"   –†–∞—Å—á—ë—Ç—ã: {'‚úÖ' if calc_ok else '‚ùå'}")
    
    if backend_ok and calc_ok:
        print(f"\nüéâ –ê–õ–ì–û–†–ò–¢–ú –ì–û–¢–û–í!")
        print("‚úÖ –ö–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏")
        print("‚úÖ –ó–Ω–∞—á–µ–Ω–∏—è 809/647/65/10.05% –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
        print("‚úÖ –õ–æ–≥–∏–∫–∞ —É–ø—Ä–æ—â–µ–Ω–∞ (—É–±—Ä–∞–Ω–∞ total_earned)")
        print("‚úÖ –£–±—Ä–∞–Ω–∞ pause_on_draw")
        
        print(f"\nüöÄ –ú–û–ñ–ù–û –¢–ï–°–¢–ò–†–û–í–ê–¢–¨:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ 1-100, 16 –∏–≥—Ä")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ '–û–±—â–∞—è —Å—É–º–º–∞ —Ü–∏–∫–ª–∞: 809'")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –Ω–µ—Ç '–ü–∞—É–∑–∞ –ø—Ä–∏ –Ω–∏—á—å–µ'")
    else:
        print(f"\n‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –ü–†–û–í–ï–†–ö–ê!")
    
    print("=" * 50)

if __name__ == "__main__":
    main()