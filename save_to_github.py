#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ü–∏–∫–ª–æ–≤ –±–æ—Ç–æ–≤ –≤ GitHub.
–°–æ–∑–¥–∞–µ—Ç –∫–æ–º–º–∏—Ç —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–π.
"""

import subprocess
import sys
import os
from datetime import datetime

def run_command(cmd, capture_output=True):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=capture_output, text=True)
        if result.returncode != 0 and capture_output:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {cmd}")
            print(f"   Stderr: {result.stderr}")
            return False, result.stderr
        return True, result.stdout if capture_output else ""
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False, str(e)

def main():
    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ü–∏–∫–ª–æ–≤ –±–æ—Ç–æ–≤ –≤ GitHub")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not os.path.exists('.git'):
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ .git. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...")
    success, output = run_command("git status --porcelain")
    if not success:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ git")
        sys.exit(1)
    
    if not output.strip():
        print("‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
        return
    
    print(f"üìù –ù–∞–π–¥–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
    for line in output.strip().split('\n'):
        print(f"   {line}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print("\nüì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    success, _ = run_command("git add .")
    if not success:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
    commit_message = """üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª–Ω–æ–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–∏–∫–ª–æ–≤ –û–±—ã—á–Ω—ã—Ö –±–æ—Ç–æ–≤

üéØ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê:
- –£—Å—Ç—Ä–∞–Ω–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –º–æ–¥–∞–ª–∫–µ "–ò—Å—Ç–æ—Ä–∏—è —Ü–∏–∫–ª–æ–≤"
- –£–±—Ä–∞–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–∫—Ç–∏–≤–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏ —Å temp_cycle_* –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
- –û–±–µ—Å–ø–µ—á–µ–Ω–∞ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ü–∏–∫–ª–æ–≤
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–≥—Ä–µ–≥–∞—Ü–∏—è –≤ "–î–æ—Ö–æ–¥ –æ—Ç –±–æ—Ç–æ–≤" –∏ "–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–∏–±—ã–ª–∏"

üîß –ö–õ–Æ–ß–ï–í–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø:

Backend (server.py):
- –£–±—Ä–∞–Ω –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–∑–æ–≤ save_completed_cycle() –≤ maintain_all_bots_active_bets()
- –£–ª—É—á—à–µ–Ω–∞ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π race conditions
- –£–¥–∞–ª–µ–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ –≤ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞—Ö
- –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è temp_cycle_* –≤–æ –≤—Å–µ—Ö API (–∏—Å—Ç–æ—Ä–∏—è, —ç–∫—Å–ø–æ—Ä—Ç, –∞–≥—Ä–µ–≥–∞—Ü–∏—è)
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –≤ get_bot_cycle_history, export_bot_cycles_csv, get_bot_revenue_summary

Frontend:
- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ —É–∂–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ BotCycleModal.js –∏ RegularBotsManagement.js

üõ†Ô∏è –°–û–ó–î–ê–ù–´ –°–ö–†–ò–ü–¢–´:
- cleanup_and_fix_cycles.py - –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ë–î –æ—Ç —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤
- verify_cycles_integrity.py - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
- create_unique_index.py - —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ (bot_id, cycle_number)
- test_cycle_logic.py - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
- final_test_cycles.py - –∏—Ç–æ–≥–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (7/7 —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ)

üìä –†–ï–ó–£–õ–¨–¢–ê–¢:
- ‚úÖ 100% —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ (7/7)
- ‚úÖ –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
- ‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–æ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
- ‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É

üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ:
1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
2. –°–¥–µ–ª–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ë–î
3. –ó–∞–ø—É—Å—Ç–∏—Ç—å cleanup_and_fix_cycles.py –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
4. –ó–∞–ø—É—Å—Ç–∏—Ç—å final_test_cycles.py –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
5. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
6. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã

üéâ –ó–ê–î–ê–ß–ê –í–´–ü–û–õ–ù–ï–ù–ê: –¢–µ–ø–µ—Ä—å —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¢–û–õ–¨–ö–û —Ä–µ–∞–ª—å–Ω–æ —Å—ã–≥—Ä–∞–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã –±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∏ –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."""
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    print("üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞...")
    success, _ = run_command(f'git commit -m "{commit_message}"')
    if not success:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞")
        sys.exit(1)
    
    print("‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    
    # –ü—É—à–∏–º –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    print("üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ GitHub...")
    success, output = run_command("git push", capture_output=False)
    if not success:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ GitHub")
        print("   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å 'git push' –≤—Ä—É—á–Ω—É—é")
        sys.exit(1)
    
    print("üéâ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –£–°–ü–ï–®–ù–û –°–û–•–†–ê–ù–ï–ù–´ –í GITHUB!")
    print("\nüìã –ß—Ç–æ –±—ã–ª–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:")
    print("   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π server.py —Å —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–∏–∫–ª–æ–≤")
    print("   - –°–∫—Ä–∏–ø—Ç—ã –æ—á–∏—Å—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ë–î")
    print("   - –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç CYCLES_FIX_FINAL_REPORT.md")
    print("   - –í—Å–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã")
    
    print(f"\n‚úÖ –ó–∞–¥–∞—á–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    main()